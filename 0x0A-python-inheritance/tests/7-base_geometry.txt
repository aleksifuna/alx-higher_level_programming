The ``7-base_geometry`` module
==========================
``BaseGeometry Class``
----------------
Has two method to manupilate its data


``` integer_validator```
---------------------------
validates value


	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", 23)

	>>> bg.integer_validator("width", 2.5)
	Traceback (most recent call last):
		...
	TypeError: width must be an integer

	>>> bg.integer_validator("width", -4)
	Traceback (most recent call last):
		...
	ValueError: width must be greater than 0
	
	>>> bg.integer_validator("width", 0)
	Traceback (most recent call last):
		...
	ValueError: width must be greater than 0

	>>> bg.integer_validator("dia", None)
	Traceback (most recent call last):
		...
	TypeError: dia must be an integer

	>>> bg.integer_validator("height", "23")
	Traceback (most recent call last):
		...
	TypeError: height must be an integer
	
	>>> bg.integer_validator("radius", "A")
	Traceback (most recent call last):
		...
	TypeError: radius must be an integer

	>>> bg.integer_validator("rad", 90)
	
	>>> bg.integer_validator("radius", [1, 3, 4, 6])
	Traceback (most recent call last):
		...
	TypeError: radius must be an integer
	
	>>> bg.integer_validator("radius", (4,))
	Traceback (most recent call last):
		...
	TypeError: radius must be an integer
	
	>>> bg.integer_validator("radius", True)
	Traceback (most recent call last):
		...
	TypeError: radius must be an integer
	
	>>> bg.integer_validator("radius", {3,4})
	Traceback (most recent call last):
		...
	TypeError: radius must be an integer

	>>> bg.area()
	Traceback (most recent call last):
		...
	Exception: area() is not implemented
	
	>>> bg.integer_validator("radius")
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 1 required positional argument: 'value'
	
	>>> bg.integer_validator()
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
